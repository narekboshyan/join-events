
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password_hash: 'password_hash',
  email_verified: 'email_verified',
  email_verified_at: 'email_verified_at',
  first_name: 'first_name',
  last_name: 'last_name',
  date_of_birth: 'date_of_birth',
  phone: 'phone',
  age: 'age',
  bio: 'bio',
  country: 'country',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  full_address: 'full_address',
  location: 'location',
  is_active: 'is_active',
  is_verified: 'is_verified',
  profile_completed: 'profile_completed',
  privacy_settings: 'privacy_settings',
  created_at: 'created_at',
  updated_at: 'updated_at',
  last_login_at: 'last_login_at'
};

exports.Prisma.User_connectionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  connected_id: 'connected_id',
  status: 'status',
  connection_type: 'connection_type',
  notes: 'notes',
  last_interaction: 'last_interaction',
  interaction_count: 'interaction_count',
  is_favorite: 'is_favorite',
  is_hidden: 'is_hidden',
  can_see_events: 'can_see_events',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_profile_visitsScalarFieldEnum = {
  id: 'id',
  visitor_id: 'visitor_id',
  profile_user_id: 'profile_user_id',
  visited_at: 'visited_at',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  is_anonymous: 'is_anonymous',
  referrer: 'referrer',
  session_id: 'session_id',
  page_section: 'page_section',
  duration: 'duration',
  interactions: 'interactions',
  device_type: 'device_type',
  browser: 'browser',
  os: 'os',
  country: 'country',
  city: 'city'
};

exports.Prisma.Event_page_visitsScalarFieldEnum = {
  id: 'id',
  visitor_id: 'visitor_id',
  event_id: 'event_id',
  visited_at: 'visited_at',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  is_anonymous: 'is_anonymous',
  referrer: 'referrer',
  session_id: 'session_id',
  page_section: 'page_section',
  duration: 'duration',
  interactions: 'interactions',
  rsvp_action: 'rsvp_action',
  invitation_id: 'invitation_id',
  utm_source: 'utm_source',
  utm_campaign: 'utm_campaign',
  utm_medium: 'utm_medium',
  device_type: 'device_type',
  browser: 'browser',
  os: 'os',
  country: 'country',
  city: 'city'
};

exports.Prisma.AttachmentsScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  original_name: 'original_name',
  file_path: 'file_path',
  file_url: 'file_url',
  file_size: 'file_size',
  mime_type: 'mime_type',
  file_type: 'file_type',
  width: 'width',
  height: 'height',
  duration: 'duration',
  alt_text: 'alt_text',
  description: 'description',
  user_id: 'user_id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  attachment_order: 'attachment_order',
  is_processed: 'is_processed',
  is_public: 'is_public',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HobbiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  category: 'category',
  icon_url: 'icon_url',
  is_active: 'is_active',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_hobbiesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  hobby_id: 'hobby_id',
  skill_level: 'skill_level',
  years_experience: 'years_experience',
  is_favorite: 'is_favorite',
  interest_level: 'interest_level',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ActivitiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  category: 'category',
  icon_url: 'icon_url',
  is_active: 'is_active',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_activitiesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  activity_id: 'activity_id',
  frequency: 'frequency',
  preference_level: 'preference_level',
  is_favorite: 'is_favorite',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EntertainmentsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  category: 'category',
  icon_url: 'icon_url',
  is_active: 'is_active',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_entertainmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  entertainment_id: 'entertainment_id',
  preference_level: 'preference_level',
  is_favorite: 'is_favorite',
  genre_preferences: 'genre_preferences',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EventsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  type: 'type',
  status: 'status',
  start_date: 'start_date',
  end_date: 'end_date',
  timezone: 'timezone',
  is_public: 'is_public',
  is_paid: 'is_paid',
  price: 'price',
  currency: 'currency',
  max_participants: 'max_participants',
  min_participants: 'min_participants',
  auto_approve: 'auto_approve',
  allow_guests: 'allow_guests',
  require_approval: 'require_approval',
  category: 'category',
  tags: 'tags',
  age_restriction: 'age_restriction',
  dress_code: 'dress_code',
  created_by: 'created_by',
  admin_notes: 'admin_notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Event_rolesScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  user_id: 'user_id',
  role: 'role',
  can_invite_users: 'can_invite_users',
  can_edit_event: 'can_edit_event',
  can_manage_locations: 'can_manage_locations',
  can_view_analytics: 'can_view_analytics',
  can_send_messages: 'can_send_messages',
  assigned_by: 'assigned_by',
  role_notes: 'role_notes',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Event_locationsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  name: 'name',
  venue_type: 'venue_type',
  address: 'address',
  city: 'city',
  state: 'state',
  country: 'country',
  postal_code: 'postal_code',
  latitude: 'latitude',
  longitude: 'longitude',
  online_url: 'online_url',
  online_platform: 'online_platform',
  meeting_id: 'meeting_id',
  access_code: 'access_code',
  start_datetime: 'start_datetime',
  end_datetime: 'end_datetime',
  setup_time: 'setup_time',
  cleanup_time: 'cleanup_time',
  capacity: 'capacity',
  is_accessible: 'is_accessible',
  parking_info: 'parking_info',
  public_transport: 'public_transport',
  special_instructions: 'special_instructions',
  display_order: 'display_order',
  is_active: 'is_active',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Event_attachmentsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  attachment_id: 'attachment_id',
  attachment_type: 'attachment_type',
  display_order: 'display_order',
  is_featured: 'is_featured',
  created_at: 'created_at'
};

exports.Prisma.Event_invitationsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  invited_user_id: 'invited_user_id',
  invited_email: 'invited_email',
  invited_by: 'invited_by',
  invitation_type: 'invitation_type',
  personal_message: 'personal_message',
  max_guests: 'max_guests',
  status: 'status',
  response_date: 'response_date',
  decline_reason: 'decline_reason',
  guest_count: 'guest_count',
  dietary_restrictions: 'dietary_restrictions',
  special_requests: 'special_requests',
  will_attend_all_locations: 'will_attend_all_locations',
  attending_locations: 'attending_locations',
  arrival_time: 'arrival_time',
  departure_time: 'departure_time',
  is_plus_one: 'is_plus_one',
  parent_invitation_id: 'parent_invitation_id',
  reminder_sent_at: 'reminder_sent_at',
  reminder_count: 'reminder_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Oauth_accountsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  provider: 'provider',
  provider_id: 'provider_id',
  provider_email: 'provider_email',
  provider_username: 'provider_username',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  users: 'users',
  user_connections: 'user_connections',
  user_profile_visits: 'user_profile_visits',
  event_page_visits: 'event_page_visits',
  attachments: 'attachments',
  hobbies: 'hobbies',
  user_hobbies: 'user_hobbies',
  activities: 'activities',
  user_activities: 'user_activities',
  entertainments: 'entertainments',
  user_entertainments: 'user_entertainments',
  events: 'events',
  event_roles: 'event_roles',
  event_locations: 'event_locations',
  event_attachments: 'event_attachments',
  event_invitations: 'event_invitations',
  oauth_accounts: 'oauth_accounts'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
